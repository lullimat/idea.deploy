# VENV variables
VENV_ROOT=${PWD}/py-env
VENV=${VENV_ROOT}/idpy-env
VENV_SRC=${VENV}/src/
VENV_BIN=${VENV}/bin/
VENV_LIB=${VENV}/lib/
VENV_ALIASES=${VENV}/idpy-aliases.sh

ID_BASHRC_BANNER="# idea.deploy: the 2 lines below are for importing the aliases"
ID_BASHRC_ALIASES_OPT="shopt -s expand_aliases"
ID_BASHRC_SOURCE_ALIASES="source ${VENV_ALIASES}"

ID_CUDA_PATH_FOUND=${VENV_ROOT}/cuda_path_found

# SERVERS
PYPI_SERVERS[0]=pypi.python.org
PYPI_SERVERS[1]=pypi.douban.com

PYHOSTED_SERVERS[0]=files.pythonhosted.org
PYHOSTED_SERVERS[1]=pypi.tuna.tsinghua.edu.cn

# ALIASES
LOAD_ALIAS_STRING="alias idpy-load='source ${VENV_BIN}/activate'"
LOAD_ALIAS_STRING_SED=$(echo ${LOAD_ALIAS_STRING} | sed 's/\//\\\//g' | sed 's/\ /\\ /g')

GO_ALIAS_STRING="alias idpy-go='cd ${PWD}'"
GO_ALIAS_STRING_SED=$(echo ${GO_ALIAS_STRING} | sed 's/\//\\\//g' | sed 's/\ /\\ /g')

JUPYTER_ALIAS_STRING="alias idpy-jupyter='jupyter notebook --port 4379 --no-browser'"
JUPYTER_ALIAS_STRING_SED=$(echo ${JUPYTER_ALIAS_STRING} | sed 's/\//\\\//g' | sed 's/\ /\\ /g')

JUPYTER_FORWARD_ALIAS_STRING="alias idpy-jupyter-forward='ssh -N -f -L localhost:4379:localhost:4379'"
JUPYTER_FORWARD_ALIAS_STRING="alias idpy-jupyter-forward='jup_forward(){ if ((\${#} < 1)); then echo \"usage: idpy-jupyter-forward <user@remote-host> [<remote-port:4379 default> <local-port:4379 default>]\"; return; fi; local REMOTE_P=\${2}; if ((\${#REMOTE_P} == 0)); then REMOTE_P=4379; fi; local LOCAL_P=\${3}; if ((\${#LOCAL_P} == 0)); then LOCAL_P=4379; fi; ssh -N -f -L localhost:\${LOCAL_P}:localhost:\${REMOTE_P} \${1}; unset -f jup_forward; }; jup_forward'"
JUPYTER_FORWARD_ALIAS_STRING_SED=$(echo ${JUPYTER_FORWARD_ALIAS_STRING} | sed 's/\//\\\//g' | sed 's/\ /\\ /g' | sed 's/\#/\\#/g' | sed 's/\[/\\[/g' | sed 's/\]/\\]/g')

IPYPARALLEL_MPI_ALIAS_STRING="alias idpy-jupyter-mpi='launch_ipy_mpi(){ if ((\${#} != 2)); then echo \"usage: idpy-ipyparallel-mpi <n-procs> <port>\"; return; fi; echo \"ipcluster logs will be put in ipcluster.out and ipcluster.err and the pid in ipcluster.pid\"; (nohup ipcluster start --engines=MPI --n \${1} 1>ipcluster.out 2>ipcluster.err & echo \${!} > ipcluster.pid); jupyter notebook --port \${2} --no-browser; unset -f launch_ipy_mpi; }; launch_ipy_mpi'"
IPYPARALLEL_MPI_ALIAS_STRING_SED=$(echo ${IPYPARALLEL_MPI_ALIAS_STRING} | sed 's/\//\\\//g' | sed 's/\ /\\ /g' | sed 's/\#/\\#/g' | sed 's/\[/\\[/g' | sed 's/\]/\\]/g')

IPYPARALLEL_MPI_CLEAN_ALIAS_STRING="alias idpy-jupyter-mpi-clean='kill -9 \`cat ipcluster.pid\`; rm ipcluster.pid ipcluster.err ipcluster.out'"
IPYPARALLEL_MPI_CLEAN_ALIAS_STRING_SED=$(echo ${IPYPARALLEL_MPI_CLEAN_ALIAS_STRING} | sed 's/\//\\\//g' | sed 's/\ /\\ /g')

IDPY_ALIASES[0]="${LOAD_ALIAS_STRING}"
IDPY_ALIASES[1]="${GO_ALIAS_STRING}"
IDPY_ALIASES[2]="${JUPYTER_ALIAS_STRING}"
IDPY_ALIASES[3]="${JUPYTER_FORWARD_ALIAS_STRING}"
IDPY_ALIASES[4]="${IPYPARALLEL_MPI_ALIAS_STRING}"
IDPY_ALIASES[5]="${IPYPARALLEL_MPI_CLEAN_ALIAS_STRING}"

IDPY_ALIASES_SED[0]="${LOAD_ALIAS_STRING_SED}"
IDPY_ALIASES_SED[1]="${GO_ALIAS_STRING_SED}"
IDPY_ALIASES_SED[2]="${JUPYTER_ALIAS_STRING_SED}"
IDPY_ALIASES_SED[3]="${JUPYTER_FORWARD_ALIAS_STRING_SED}"
IDPY_ALIASES_SED[4]="${IPYPARALLEL_MPI_ALIAS_STRING_SED}"
IDPY_ALIASES_SED[5]="${IPYPARALLEL_MPI_CLEAN_ALIAS_STRING_SED}"

# CHECK SYSTEM
# https://stackoverflow.com/questions/3466166/how-to-check-if-running-in-cygwin-mac-or-linux
UNAME_OUT="$(uname -s)"
case "${UNAME_OUT}" in
    Linux*)     IDEP_OS="Linux";;
    Darwin*)    IDEP_OS="MacOS";;
    CYGWIN*)    IDEP_OS="Cygwin";;
    MINGW*)     IDEP_OS="MinGw";;
    *)          IDEP_OS="UNKNOWN:${UNAME_OUT}"
esac

IDPY=${PWD}/idpy/
IDPY_TEST_STDOUT=${IDPY}/idpy_tests_stdout
IDPY_TEST_STDERR=${IDPY}/idpy_tests_stderr
